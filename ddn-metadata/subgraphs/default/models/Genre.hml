kind: ObjectType
version: v1
definition:
  name: Genre
  graphql:
    typeName: genre
    inputTypeName: genreInput
  fields:
    - name: GenreId
      type: int4!
    - name: Name
      type: varchar

---
kind: TypePermissions
version: v1
definition:
  typeName: Genre
  permissions:
    - role: admin
      output:
        allowedFields:
          - GenreId
          - Name

---
kind: Model
version: v1
definition:
  name: Genre
  objectType: Genre
  filterableFields:
    - fieldName: GenreId
      operators:
        enableAll: true
    - fieldName: Name
      operators:
        enableAll: true
  orderableFields:
    - fieldName: GenreId
      orderByDirections:
        enableAll: true
    - fieldName: Name
      orderByDirections:
        enableAll: true
  arguments: []
  graphql:
    selectUniques:
      - queryRootField: genreByGenreid
        uniqueIdentifier:
          - GenreId
    selectMany:
      queryRootField: genre
    filterExpressionType: genreBoolExp
    orderByExpressionType: genreOrderBy
  source:
    collection: Genre
    dataConnectorName: postgres_connector

---
kind: ModelPermissions
version: v1
definition:
  modelName: Genre
  permissions:
    - role: admin
      select:
        filter: null

---
kind: Relationship
version: v1
definition:
  name: Tracks
  source: Genre
  target:
    model:
      relationshipType: Array
      name: Track
  mapping:
    - source:
        fieldPath:
          - fieldName: GenreId
      target:
        modelField:
          - fieldName: GenreId
