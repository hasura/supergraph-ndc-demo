#Docker-Compose
version: '0.1'

services:
  
  auth:
    ports:
      - "3050:3050"
    build: ./auth
    restart: always
  
  postgres_database:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ${POSTGRES_CREATE}:/docker-entrypoint-initdb.d/01-setup.sql
      - ${POSTGRES_INSERT}:/docker-entrypoint-initdb.d/03-setup.sql
    restart: always
    ports:
      - "5432:5432"

  qdrant_database:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    restart: always

  engine:
    image: us-central1-docker.pkg.dev/websitecloud-352908/v3-engine/v3-engine:1-alpha
    ports:
      - "8000:8000"
    volumes:
      - ${ENGINE_METADATA_PATH}:/engine_metadata.json
      - ${ENGINE_AUTH_PATH}:/auth_config.json
    environment:
      - HASURA_GRAPHQL_CORS_DOMAIN=http://localhost:3000
    command: ["--port", "8000", "--metadata-path", "/engine_metadata.json", "--authn-config-path", "/auth_config.json"]
    restart: always
    depends_on:
      - auth


  postgres:
    image: us-docker.pkg.dev/hasura-ddn/ddn/ndc-postgres:${CONNECTOR_TAG:-dev-main}
    command: ["serve", "--configuration", "/deployment.json", "--port", "8100"]
    ports:
      - 8100:8100
    volumes:
      - ${POSTGRES_METADATA}:/deployment.json

  turso:
    image: us-central1-docker.pkg.dev/websitecloud-352908/ndc-turso/ndc-turso:4-alpha
    ports:
      - "8101:8101"
    volumes:
      - ${TURSO_METADATA}:/etc/connector/config.json
      - ${TURSO_DATABASE}:/usr/src/app/database.sqlite
  
  snapshot-uploader:
    build:
      context: ./worker
      dockerfile: Dockerfile
    volumes:
      - snapshot-data:/app/snapshots
    depends_on:
      - qdrant_database
  
  qdrant:
    image: us-central1-docker.pkg.dev/websitecloud-352908/ndc-qdrant/ndc-qdrant:0-alpha
    ports:
      - "8102:8102"
    volumes:
      - ${QDRANT_METADATA}:/etc/connector/config.json
    restart: always

  functions:
    image: ghcr.io/hasura/ndc-typescript-deno:latest
    volumes:
      - ${FUNCTIONS_SRC}:/functions/src
    ports:
      - "8080:8080"
    restart: always

  # postgres_database: # pg_turso extension preloaded, this is flaky.
  # TODO: Fix me, so we can replicate data from Postgres into SQLite for edge/local caching!
  #   build:
  #     context: ./pgturso
  #     args:
  #       OS: ${ZIG_OS}
  #       ARCH: ${ZIG_ARCH}
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ${POSTGRESQL_CONF}:/postgresql.conf
  #     # - ${TURSO_IMPORT_CREDENTIALS}:/docker-entrypoint-initdb.d/00-setup.sql # 
  #     - ${POSTGRES_CREATE}:/docker-entrypoint-initdb.d/01-setup.sql
  #     # - ${TURSO_SCHEDULE_REPLICATION}:/docker-entrypoint-initdb.d/02-setup.sql
  #     - ${POSTGRES_INSERT}:/docker-entrypoint-initdb.d/03-setup.sql
  #   restart: always

volumes:
  postgres_data:
  snapshot-data:
